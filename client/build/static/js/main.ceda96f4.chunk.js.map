{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/SaveBtn/index.js","components/Grid/index.js","components/Form/index.js","components/List/index.js","pages/Search.js","components/DeleteBtn/index.js","pages/Saved.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["API","getBooks","axios","get","getBook","id","deleteBook","delete","saveBook","bookData","post","search","title","concat","process","Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","paddingTop","textAlign","className","SaveBtn","props","Object","assign","role","tabIndex","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","join","Input","FormBtn","float","marginBottom","List","ListItem","Books","state","book","author","description","loadBooks","then","res","_this","setState","data","catch","err","console","log","image","link","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","items","this","_this2","components_Jumbotron","onChange","placeholder","onClick","key","href","volumeInfo","infoLink","alt","authors","components_SaveBtn","imageLinks","thumbnail","Component","DeleteBtn","Saved","saveBooks","length","_id","Link","to","src","components_DeleteBtn","Nav","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ceda96f4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  \r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  },\r\n\r\n  search: function(title){\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${process.env.REACT_APP_API_KEY}`)\r\n  },\r\n};","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 100, clear: \"both\", paddingTop: 20, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction SaveBtn(props) {\r\n  return (\r\n    <span className=\"save-btn\" {...props} role=\"button\" tabIndex=\"0\">\r\n      Save\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default SaveBtn;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This file exports both the List and ListItem components\r\n\r\nexport function List({ children }) {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport SaveBtn from \"../components/SaveBtn\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\nclass Books extends Component {\r\n    state = {\r\n        book: [],\r\n        search: [],\r\n        title: \"\",\r\n        author: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n\r\ncomponentDidMount() {\r\n    this.loadBooks();\r\n}\r\n\r\nloadBooks = () => {\r\n    API.getBooks()\r\n        .then(res =>\r\n            this.setState({book: res.data, title:\"\", author: \"\", description: \"\"})\r\n            )\r\n            .catch(err => console.log(err));\r\n\r\n};\r\n\r\nsaveBook = (title, author, description, image, link) => {\r\n    API.saveBook({\r\n        title: title,\r\n        author: author,\r\n        description: description,\r\n        image: image,\r\n        link: link\r\n    })\r\n    .then(res => this.loadBooks())\r\n    .catch(err => console.log(err))\r\n};\r\n\r\ndeleteBook = id => {\r\n    API.deleteBook(id)\r\n        .then(res => this.loadBooks())\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nhandleInputChange = event => {\r\n    const {name, value} = event.target;\r\n    this.setState({\r\n        [name]: value\r\n    })\r\n};\r\n\r\nhandleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.title) {\r\n        API.search(this.state.title)\r\n        .then(res => this.setState({search: res.data.items}))\r\n        .catch(err => console.log(err))\r\n    }\r\n};\r\n\r\nrender() {\r\n    return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <Jumbotron>\r\n                        <h1> Search for books!</h1>\r\n                    </Jumbotron>\r\n                    <form>\r\n                        <Input\r\n                            value={this.state.title}\r\n                            onChange={this.handleInputChange}\r\n                            name=\"title\"\r\n                            placeholder=\"Enter title\"\r\n                            />\r\n                            <FormBtn\r\n                                onClick={this.handleFormSubmit}\r\n                            >\r\n                                Search!\r\n                            </FormBtn>\r\n                        </form>\r\n                        </Col>\r\n                        </Row>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                <List>\r\n                    {this.state.search.map(res => (\r\n                        <ListItem key={res.id}>\r\n                        <a href={res.volumeInfo.infoLink} alt =\"book link\">\r\n                        {res.volumeInfo.title} by {res.volumeInfo.authors[0]}\r\n                        </a>\r\n                        <SaveBtn onClick={() => this.saveBook(res.volumeInfo.title, res.volumeInfo.authors, res.volumeInfo.description, res.volumeInfo.imageLinks.thumbnail, res.volumeInfo.infoLink)} />\r\n                        </ListItem>\r\n\r\n                    ))}\r\n                </List>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n        \r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default Books;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The ...props means, spread all of the passed props onto this element\r\n// That way we don't have to define them all individually\r\nfunction DeleteBtn(props) {\r\n  return (\r\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\r\n     ✗\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default DeleteBtn;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        book: [],\r\n        search: [],\r\n        title: \"\",\r\n        author: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n\r\ncomponentDidMount() {\r\n    this.loadBooks();\r\n}\r\n\r\nloadBooks = () => {\r\n    API.getBooks()\r\n        .then(res =>\r\n            this.setState({book: res.data, title:\"\", author: \"\", description: \"\"})\r\n            )\r\n            .catch(err => console.log(err));\r\n\r\n};\r\n\r\nsaveBooks = (title, author, description, image, link) => {\r\n    API.saveBook({\r\n        title: title,\r\n        author: author,\r\n        description: description,\r\n        image: image,\r\n        link: link\r\n    })\r\n    .then(res => this.loadBooks())\r\n    .catch(err => console.log(err))\r\n};\r\n\r\ndeleteBook = id => {\r\n    API.deleteBook(id)\r\n        .then(res => this.loadBooks())\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nhandleInputChange = event => {\r\n    const {name, value} = event.target;\r\n    this.setState({\r\n        [name]: value\r\n    })\r\n};\r\n\r\nhandleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.title) {\r\n        API.search(this.state.title)\r\n        .then(res => this.setState({search: res.data.items}))\r\n        .catch(err => console.log(err))\r\n    }\r\n};\r\n\r\nrender() {\r\n    return(\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <Jumbotron>\r\n                        <h1> Saved Books</h1>\r\n                    </Jumbotron>\r\n                    {this.state.book.length ? (\r\n                        <List> \r\n                            {this.state.book.map(book => (\r\n                                <ListItem key={book._id}>\r\n                                    <Link to={\"/books/\" + book._id}>\r\n                                        {book.title} by {book.author}\r\n                                        <br></br>\r\n                                        {/* Synopsis: {book.description} */}\r\n                                        <br></br>\r\n                                        <img src={book.image} alt=\"Book art\"/>\r\n                                    </Link>\r\n                                    <DeleteBtn onClick={()=> this.deleteBook(book._id)}/>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>) : (<strong>No books saved.</strong>)}\r\n                        </Col>\r\n                        </Row>\r\n                        </Container>\r\n                        \r\n                    )}}\r\n                    \r\n\r\nexport default Saved;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand text-light\">\r\n        Book List\r\n      </a>\r\n      <ul className=\"navbar-nav flex-row ml-md-auto links\">\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"/search\" className=\"nav-link d-inline-flex\">Search<span className=\"border-right mx-5\"></span></Link>\r\n        </li>\r\n        <li className=\"nav-item active\">\r\n          <Link to=\"saved\" className=\"nav-link d-inline-flex\">Saved</Link>\r\n        </li>\r\n        </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\n\n\nfunction App(){\n  return(\n    <div>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}